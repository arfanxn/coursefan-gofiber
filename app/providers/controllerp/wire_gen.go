// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package controllerp

import (
	"github.com/arfanxn/coursefan-gofiber/app/http/controllers"
	"github.com/arfanxn/coursefan-gofiber/app/policies"
	"github.com/arfanxn/coursefan-gofiber/app/repositories"
	"github.com/arfanxn/coursefan-gofiber/app/services"
	"gorm.io/gorm"
)

// Injectors from injector.go:

func InitAuthController(db *gorm.DB) *controllers.AuthController {
	userRepository := repositories.NewUserRepository(db)
	mediaRepository := repositories.NewMediaRepository(db)
	tokenRepository := repositories.NewTokenRepository(db)
	authService := services.NewAuthService(userRepository, mediaRepository, tokenRepository)
	authController := controllers.NewAuthController(authService)
	return authController
}

func InitCourseController(db *gorm.DB) *controllers.CourseController {
	courseUserRoleRepository := repositories.NewCourseUserRoleRepository(db)
	coursePolicy := policies.NewCoursePolicy(courseUserRoleRepository)
	courseRepository := repositories.NewCourseRepository(db)
	courseService := services.NewCourseService(courseRepository)
	courseController := controllers.NewCourseController(coursePolicy, courseService)
	return courseController
}

func InitLecturePartController(db *gorm.DB) *controllers.LecturePartController {
	lecturePartRepository := repositories.NewLecturePartRepository(db)
	courseUserRoleRepository := repositories.NewCourseUserRoleRepository(db)
	lecturePartPolicy := policies.NewLecturePartPolicy(lecturePartRepository, courseUserRoleRepository)
	lecturePartService := services.NewLecturePartService(lecturePartRepository)
	lecturePartController := controllers.NewLecturePartController(lecturePartPolicy, lecturePartService)
	return lecturePartController
}

func InitLectureController(db *gorm.DB) *controllers.LectureController {
	permissionRepository := repositories.NewPermissionRepository(db)
	lecturePolicy := policies.NewLecturePolicy(permissionRepository)
	lectureRepository := repositories.NewLectureRepository(db)
	mediaRepository := repositories.NewMediaRepository(db)
	lectureService := services.NewLectureService(lectureRepository, mediaRepository)
	lectureController := controllers.NewLectureController(lecturePolicy, lectureService)
	return lectureController
}
